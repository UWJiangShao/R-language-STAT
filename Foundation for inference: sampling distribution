
# Load the ames data frame:
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/ames.RData"))

# Make some preliminary inspections:
head(ames)
names(ames)
tail(ames)


Create two objects area and price and assign to them the two variables 
(Gr.Liv.Area and SalePrice) we picked from our data frame.
Take a look at the distribution of area in the population of home sales by 
calculating the summary() and drawing a histogram of area.

# The ames data frame is already loaded into the workspace.
# Assign the variables:
area <- ames$Gr.Liv.Area
price <- ames$SalePrice


# Calculate the summary and draw a histogram of area
summary(area)
hist(area)

The distribution of areas of houses in Ames is unimodal and right-skewed.
press 1

50% of houses in Ames are smaller than 1,500 square feet.
press 2.   <--

The middle 50% of the houses range between approximately 1,130 square feet and 1,740 square feet.
press 3

The IQR is approximately 610 square feet.
press 4

The smallest house is 334 square feet and the largest is 5,642 square feet.







Take a sample of 50 of the area and assign it to samp0.
Take another sample of 50 and assign it to samp1.
Compare these two samples by drawing histograms. 
You can switch between graphs by clicking the arrows right above the graph.
Think about how their distribution compares to the complete population.

# The ames data frame and area and price objects are already loaded into the workspace

# Create the samples:
samp0 <- sample(area, 50)
samp1 <- sample(area, 50)

summary(samp0)
hist(samp0, breaks = 10)
mean(samp0)

summary(samp1)
hist(samp1, breaks = 10)
mean(samp1)



# The ames data frame and area and price objects are already loaded into the workspace

# Set up an empty vector of 5000 NAs to store sample means:
sample_means50 <- rep(NA, 5000)

# Take 5000 samples of size 50 of area and store all of them in sample_means50.
for (i in 1:5000) {
  samp <- sample(area, 50)
  sample_means50[i] <- mean(samp)
}

# View the result. If you want, you can increase the bin width to show more detail by changing the breaks argument.
hist(sample_means50, breaks = 13)
